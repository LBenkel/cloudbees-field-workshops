<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Module 1: Managing Continuous Integration at Scale on CloudBees CI Workshop</title>
    <link>https://labs.cb-sa.io/module-1/</link>
    <description>Recent content in Module 1: Managing Continuous Integration at Scale on CloudBees CI Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="https://labs.cb-sa.io/module-1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitOps for CloudBees CI CasC</title>
      <link>https://labs.cb-sa.io/module-1/casc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://labs.cb-sa.io/module-1/casc/</guid>
      <description>In this lab we will setup GitOps for Configuration as Code (CasC) for CloudBees CI so that any Jenkins configuration changes you make in source control will automatically be updated in your CloudBees CI Team (Jenkins instance).
Instructor led video of lab.
 You will create a Jenkins Pipeline job on your Team (Jenkins instance) to automatically update the CloudBees CI configuration bundle for your Team (Jenkins instance). You will add some new configuration to the CloudBees CI configuration bundle in your forked cloudbees-ci-config-bundle repository and then commit the changes to the master branch of your cloudbees-ci-config-bundle repository that will in turn tigger a Jenkins Pipeline to update your CloudBees CI configuration bundle.</description>
    </item>
    
    <item>
      <title>Pipeline Template Catalogs</title>
      <link>https://labs.cb-sa.io/module-1/pipeline-template-catalog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://labs.cb-sa.io/module-1/pipeline-template-catalog/</guid>
      <description>Instructor led video of lab.
Import Pipeline Template Catalog  Navigate to the top-level of your Team (Jenkins instance) and click on Pipeline Template Catalogs in the left menu Click on Add catalog Fill out the Catalog source control options:  Branch or tag for this template catalog: master Select GitHub under Catalog source code repository location Credentials: select the username/password credential you created for the CloudBees CI workshop - it will show up as - [GitHub username]/****** (GitHub PAT from JCasC - username/password) Repository HTTPS URL: The GitHub URL for your forked copy of the pipeline-template-catalog repository.</description>
    </item>
    
    <item>
      <title>Pipeline Policies</title>
      <link>https://labs.cb-sa.io/module-1/pipeline-policies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://labs.cb-sa.io/module-1/pipeline-policies/</guid>
      <description>Create a Pipeline Policy In this lab you will create a Pipeline Policy to ensure that all Pipeline jobs that run on your Team (Jenkins instance) have a 30 minute global timeout set.
Instructor led video of lab.
 Navigate to the top-level of your Team (Jenkins instance) and click on Pipeline Policies in the left menu.  Click on New Policy Fill out the Pipeline Policy parameters:  Name: Timeout policy Action: Fail Click on Add Rule button:  Select Pipeline Timeout Timeout: 30 MINUTES   Click the Save button    Navigate back to the master branch job for the microblog-frontend Mutlibranch project and click the Build Now link in the left menu.</description>
    </item>
    
  </channel>
</rss>